name: "dbt prd pipeline"

on:
push:
    branches:
    - main

workflow_dispatch:

jobs:
build:
  runs-on: ubuntu-latest
  environment: prd
  env:
  ENV_CODE: ${{vars.ENV_CODE}}
  PROJ_CODE: ${{vars.PROJ_CODE}}

  steps:
  - name: "Step 01 - Checkout current branch"
    id: step-01
    uses: actions/checkout@v3

  - name: "Step 02 - Install dbt"
    id: step-02
    run: pip3 install dbt-core dbt-redshift

  - name: "Step 03 - Verify dbt"
    id: step-03
    run: dbt --version

  - name: "Step 04 - Compile dbt"
    id: step-04
    working-directory: ./dbt-docs/dbt
    run: |
    ls -ltra
    export DBT_PROFILES_DIR=$PWD
    dbt deps
    dbt debug -t $ENV_CODE
    dbt compile -t $ENV_CODE

  - name: "Step 05 - Generate dbt docs"
    id: step-05
    working-directory: ./dbt-docs/dbt
    run: |
    export DBT_PROFILES_DIR=$PWD
    dbt deps
    dbt docs generate -t $ENV_CODE
    cd target
    mkdir ${{ github.workspace }}/docs
    cp *.json *.html graph.gpickle ${{ github.workspace }}/docs
    ls -ltra ${{ github.workspace }}/docs

  - name: "Step 06 - Upload pages to artifact"
    id: step-06
    uses: actions/upload-pages-artifact@v2
    with:
    path: ${{ github.workspace }}/docs

  - name: "Step 07 - Zip artifact"
    id: step-07
    run: zip -jrq docs.zip ${{ github.workspace }}/docs

  - name: "Step 08 - Upload artifact for deployment job"
    id: step-08
    uses: actions/upload-artifact@v3
    with:
    name: docs
    path: docs.zip

# Deploy to S3
deploy-to-s3:
  # Add a dependency to the build job
  needs: build
  runs-on: ubuntu-latest
  environment: prd

  steps:
  - name: "Step 01 - Download artifact"
    id: step-01
    uses: actions/download-artifact@v3
    with:
    name: docs
    path: ${{ github.workspace }}

  - name: "Step 02 - Unzip artifact"
    id: step-02
    run: unzip ${{ github.workspace }}/docs.zip -d docs

  - name: "Step 03 - Setup AWS CLI"
    id: step-03
    uses: aws-actions/configure-aws-credentials@v2
    with:
    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    aws-region: ${{ vars.AWS_DEFAULT_REGION }}

  - name: "Step 04 - Sync files to S3 bucket"
    run: |
    aws s3 sync ${{ github.workspace }}/docs ${{ vars.AWS_S3_BUCKET_DBT_DOCS }} --delete